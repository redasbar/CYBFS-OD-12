ðŸ”¹ Workflow

Branching:

main (or master) â†’ stable code only.

Each feature/fix â†’ create a branch:

git checkout -b feature/add-login


Work there â†’ commit changes.

Pushing:

Send local commits to GitHub:

git push origin feature/add-login


Pull Requests (PRs):

On GitHub, open a PR from your branch â†’ main.

Teammate reviews, comments, approves.

Merge once tested.

Sync often:

Update your local branch with the latest main:

git checkout main
git pull origin main
git checkout feature/add-login
git merge main

ðŸ”¹ Key Concepts

Commit: A snapshot of changes, with a clear message.

Branch: A separate line of development (isolates features).

Pull Request: Proposal to merge branch changes into main (with code review).

Merge conflicts: When two people edit the same lines â†’ must manually resolve.

.gitignore: List of files to ignore (e.g., secrets, logs, database dumps).

Database changes: Store schema/migration files in repo, not the raw DB.

ðŸ”¹ Best Practices

Small, frequent commits with clear messages.

Always branch off main, never code directly on it.

Use PRs for every change (even small ones).

Communicate: before big changes, discuss branch names & goals.

Pull (git pull) before starting work to avoid conflicts.
